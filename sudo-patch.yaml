---
- name: RHEL Registration and Sudo CVE audit for CVE-2025-32462 and CVE-2025-32463
  hosts: all
  gather_facts: yes
  become: yes
  vars:
    # RHEL Registration variables
    use_cdn: true                    # true = CDN, false = Satellite
    force_register: true             # Force clean re-registration by default
    # CDN credentials
    rhsm_username: cobagag
    rhsm_password: OSkip@2023pass
    # Satellite registration
    satellite_org_id: your-org-ID
    satellite_fqdn: satellite.kifarunix.com
    # Activation keys per OS major version
    rhel_activation_keys:
      "6": "rhel6"
      "7": "rhel7"
      "8": "rhel8"
      "9": "rhel9"
    
    # Sudo CVE variables
    supported_ubuntu:
      - "20.04"
      - "22.04"
      - "24.04"
      - "25.04"
    supported_debian:
      - "11"
      - "12"
    supported_rhel:
      - "7"
      - "8"
      - "9"
    fixed_versions:
      CVE-2025-32462:
        Ubuntu:
          "20.04": "1.8.31-1ubuntu1.5+esm1"
          "22.04": "1.9.9-1ubuntu2.5"
          "24.04": "1.9.15p5-3ubuntu5.24.04.1"
          "25.04": "1.9.15p5-3ubuntu5.25.04.1"
        Debian:
          "11": "1.9.5p2-3+deb11u2"
          "12": "1.9.13p3-1+deb12u2"
        RedHat:
          "7": "1.8.23-10"
          "8": "1.9.5p2-1"
          "9": "1.9.5p2-10"
        CentOS:
          "7": "1.8.23-10"
          "8": "1.9.5p2-1"
          "9": "1.9.5p2-10"
        AlmaLinux:
          "8": "1.9.5p2-1"
          "9": "1.9.5p2-10"
        Rocky:
          "8": "1.9.5p2-1"
          "9": "1.9.5p2-10"
      CVE-2025-32463:
        Ubuntu:
          "20.04": "not affected"
          "22.04": "not affected"
          "24.04": "1.9.15p5-3ubuntu5.24.04.1"
          "25.04": "1.9.15p5-3ubuntu5.25.04.1"
        Debian:
          "11": "not affected"
          "12": "not affected"
        RedHat:
          "7": "not affected"
          "8": "not affected"
          "9": "not affected"
        CentOS:
          "7": "not affected"
          "8": "not affected"
          "9": "not affected"
        AlmaLinux:
          "8": "not affected"
          "9": "not affected"
        Rocky:
          "8": "not affected"
          "9": "not affected"

  tasks:
    # ========================================
    # RHEL REGISTRATION TASKS
    # ========================================
    - name: Set activation key based on OS major version (RHEL only)
      set_fact:
        satellite_activation_key: "{{ rhel_activation_keys[ansible_distribution_major_version] }}"
      when: ansible_distribution == "RedHat"

    - name: Full RHSM cleanup (unregister, remove, clean) - RHEL only
      shell: |
        subscription-manager unregister || true
        subscription-manager remove --all || true
        subscription-manager clean || true
      when: 
        - ansible_distribution == "RedHat"
        - force_register
      register: rhsm_cleanup

    - name: Clean old RHSM certificates and facts - RHEL only
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/pki/consumer
        - /etc/pki/entitlement
        - /etc/rhsm/facts
      when: 
        - ansible_distribution == "RedHat"
        - force_register

    - name: Uninstall Katello CA consumer RPM - RHEL only
      yum:
        name: "katello-ca-consumer*"
        state: absent
        autoremove: yes
      when: ansible_distribution == "RedHat"

    - name: Install Katello CA consumer RPM - RHEL only
      yum:
        name: "https://{{ satellite_fqdn }}/pub/katello-ca-consumer-latest.noarch.rpm"
        state: present
      when: 
        - ansible_distribution == "RedHat"
        - not use_cdn
      register: katello_install

    - name: Configure no_proxy and register to Satellite - RHEL only
      shell: |
        subscription-manager config --server.no_proxy=*.{{ satellite_fqdn | regex_replace('^.*?([^.]+\.[^.]+)$', '\\1') }}
        subscription-manager register \
        --org="{{ satellite_org_id }}" \
        --activationkey="{{ satellite_activation_key }}" \
        --force
      when: 
        - ansible_distribution == "RedHat"
        - not use_cdn
      register: satellite_register

    - name: Register to Red Hat CDN - RHEL only
      command: >
        subscription-manager register
        --username="{{ rhsm_username }}"
        --password="{{ rhsm_password }}"
        --force
      when: 
        - ansible_distribution == "RedHat"
        - use_cdn
      register: cdn_register

    - name: Refresh subscription - RHEL only
      command: subscription-manager refresh
      when: 
        - ansible_distribution == "RedHat"
        - (satellite_register is defined and satellite_register.changed) or (cdn_register is defined and cdn_register.changed)

    - name: Verify RHEL registration status
      command: subscription-manager status
      register: rhsm_status
      when: ansible_distribution == "RedHat"
      failed_when: false
      changed_when: false

    - name: Set registration success status
      set_fact:
        rhel_registration_success: >-
          {{ true if rhsm_status is defined and 
             (rhsm_status.stdout is search('Simple Content Access') or 
              rhsm_status.stdout is search('Current') or
              rhsm_status.stdout is search('content, regardless of subscription status')) 
             else false }}
      when: ansible_distribution == "RedHat"

    - name: Display RHEL registration status
      debug:
        msg: 
          - "RHEL Registration Status for {{ inventory_hostname }}"
          - "{{ rhsm_status.stdout_lines }}"
      when: 
        - ansible_distribution == "RedHat"
        - rhsm_status is defined

    # ========================================
    # SUDO CVE AUDIT AND PATCHING TASKS
    # ========================================
    - name: Validate supported OS
      fail:
        msg: "Unsupported OS: {{ ansible_distribution }}. Supported OSes: Ubuntu, Debian, RedHat, CentOS, AlmaLinux, Rocky Linux."
      when: ansible_distribution not in ["Ubuntu", "Debian", "RedHat", "CentOS", "AlmaLinux", "Rocky"]

    - name: Set OS release version short
      set_fact:
        os_release_short: >-
          {{ ansible_distribution_version if ansible_distribution == "Ubuntu" else
             ansible_distribution_major_version | default(ansible_distribution_version.split('.')[0] | default('unknown')) if ansible_distribution == "Debian" else
             ansible_distribution_version.split('.')[0] | default('unknown') if ansible_distribution in ["RedHat", "CentOS", "AlmaLinux", "Rocky"] else
             ansible_distribution_version | default('unknown') }}

    - name: Skip unsupported OS versions
      fail:
        msg: |
          Unsupported {{ ansible_distribution }} version: {{ os_release_short }}.
          Supported versions: {{ supported_ubuntu if ansible_distribution == 'Ubuntu' else supported_debian if ansible_distribution == 'Debian' else supported_rhel }}.
      when: >
        (ansible_distribution == "Ubuntu" and os_release_short not in supported_ubuntu) or
        (ansible_distribution == "Debian" and os_release_short not in supported_debian) or
        (ansible_distribution in ["RedHat", "CentOS", "AlmaLinux", "Rocky"] and os_release_short not in supported_rhel)

    - name: Validate fixed_versions entry
      fail:
        msg: "No fixed_versions entry for {{ ansible_distribution }} {{ os_release_short }}."
      when: >
        ansible_distribution not in fixed_versions['CVE-2025-32462'] or
        os_release_short not in fixed_versions['CVE-2025-32462'][ansible_distribution] or
        ansible_distribution not in fixed_versions['CVE-2025-32463'] or
        os_release_short not in fixed_versions['CVE-2025-32463'][ansible_distribution]

    - name: Check if sudo is installed
      command: which sudo
      register: sudo_check
      changed_when: false
      failed_when: false
      ignore_errors: true

    - name: Fail if sudo is not installed
      fail:
        msg: "Sudo is not installed on {{ inventory_hostname }}."
      when: sudo_check.rc != 0

    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Get detailed sudo version info
      shell: |
        if command -v rpm >/dev/null 2>&1; then
          # For RPM systems, strip distribution-specific suffixes like .el8_9, .el9, etc.
          rpm -q --queryformat '%{VERSION}-%{RELEASE}' sudo 2>/dev/null | sed 's/\.el[0-9][_0-9]*.*$//' || echo "unknown"
        elif command -v dpkg >/dev/null 2>&1; then
          dpkg-query -W -f='${Version}' sudo 2>/dev/null || echo "unknown"
        else
          echo "unknown"
        fi
      register: detailed_sudo_version
      changed_when: false
      failed_when: false

    - name: Set initial sudo version
      set_fact:
        initial_sudo_version: "{{ detailed_sudo_version.stdout | default('unknown') }}"
        fixed_version_32462: "{{ fixed_versions['CVE-2025-32462'][ansible_distribution][os_release_short] }}"
        fixed_version_32463: "{{ fixed_versions['CVE-2025-32463'][ansible_distribution][os_release_short] }}"

    - name: Set CVE affected status
      set_fact:
        cve_32462_not_affected: "{{ fixed_version_32462 == 'not affected' }}"
        cve_32463_not_affected: "{{ fixed_version_32463 == 'not affected' }}"

    - name: Check initial vulnerability for CVE-2025-32462 (Debian/Ubuntu)
      command: dpkg --compare-versions "{{ initial_sudo_version }}" lt "{{ fixed_version_32462 }}"
      register: initial_32462_deb_check
      changed_when: false
      failed_when: false
      when: >
        ansible_os_family == "Debian" and
        not cve_32462_not_affected and
        initial_sudo_version != 'unknown'

    - name: Check initial vulnerability for CVE-2025-32463 (Debian/Ubuntu)
      command: dpkg --compare-versions "{{ initial_sudo_version }}" lt "{{ fixed_version_32463 }}"
      register: initial_32463_deb_check
      changed_when: false
      failed_when: false
      when: >
        ansible_os_family == "Debian" and
        not cve_32463_not_affected and
        initial_sudo_version != 'unknown'

    - name: Check if rpmdev-vercmp is available (RedHat)
      command: which rpmdev-vercmp
      register: rpmdev_available
      changed_when: false
      failed_when: false
      when: ansible_os_family == "RedHat"

    - name: Check initial vulnerability for CVE-2025-32462 (RedHat)
      command: rpmdev-vercmp "{{ initial_sudo_version }}" "{{ fixed_version_32462 }}"
      register: initial_32462_rpm_check
      changed_when: false
      failed_when: false
      when: >
        ansible_os_family == "RedHat" and
        not cve_32462_not_affected and
        initial_sudo_version != 'unknown' and
        rpmdev_available.rc == 0

    - name: Check initial vulnerability for CVE-2025-32463 (RedHat)
      command: rpmdev-vercmp "{{ initial_sudo_version }}" "{{ fixed_version_32463 }}"
      register: initial_32463_rpm_check
      changed_when: false
      failed_when: false
      when: >
        ansible_os_family == "RedHat" and
        not cve_32463_not_affected and
        initial_sudo_version != 'unknown' and
        rpmdev_available.rc == 0

    - name: Determine initial vulnerability status
      set_fact:
        initially_vulnerable_32462: >-
          {{ false if cve_32462_not_affected or initial_sudo_version == 'unknown' else
             (initial_32462_deb_check.rc == 0) if ansible_os_family == "Debian" and initial_32462_deb_check is defined and 'rc' in initial_32462_deb_check else
             (initial_32462_rpm_check.rc == 11) if ansible_os_family == "RedHat" and initial_32462_rpm_check is defined and 'rc' in initial_32462_rpm_check else
             false }}
        initially_vulnerable_32463: >-
          {{ false if cve_32463_not_affected or initial_sudo_version == 'unknown' else
             (initial_32463_deb_check.rc == 0) if ansible_os_family == "Debian" and initial_32463_deb_check is defined and 'rc' in initial_32463_deb_check else
             (initial_32463_rpm_check.rc == 11) if ansible_os_family == "RedHat" and initial_32463_rpm_check is defined and 'rc' in initial_32463_rpm_check else
             false }}

    - name: Update sudo package (Debian/Ubuntu)
      apt:
        name: sudo
        state: latest
        update_cache: yes
      when: >
        ansible_os_family == "Debian" and
        (initially_vulnerable_32462 or initially_vulnerable_32463)
      register: sudo_update_debian

    - name: Update sudo package (RedHat) - Only if registration successful
      yum:
        name: sudo
        state: latest
      when: >
        ansible_os_family == "RedHat" and
        (initially_vulnerable_32462 or initially_vulnerable_32463) and
        (ansible_distribution != "RedHat" or (rhel_registration_success | default(false)))
      register: sudo_update_redhat

    - name: Gather package facts after update
      ansible.builtin.package_facts:
        manager: auto
      when: >
        (sudo_update_debian is defined and sudo_update_debian.changed) or
        (sudo_update_redhat is defined and sudo_update_redhat.changed)

    - name: Get final sudo version after update
      shell: |
        if command -v rpm >/dev/null 2>&1; then
          # For RPM systems, strip distribution-specific suffixes like .el8_9, .el9, etc.
          rpm -q --queryformat '%{VERSION}-%{RELEASE}' sudo 2>/dev/null | sed 's/\.el[0-9][_0-9]*.*$//' || echo "unknown"
        elif command -v dpkg >/dev/null 2>&1; then
          dpkg-query -W -f='${Version}' sudo 2>/dev/null || echo "unknown"
        else
          echo "unknown"
        fi
      register: final_detailed_sudo_version
      changed_when: false
      failed_when: false
      when: >
        (sudo_update_debian is defined and sudo_update_debian.changed) or
        (sudo_update_redhat is defined and sudo_update_redhat.changed)

    - name: Set final sudo version
      set_fact:
        final_sudo_version: >-
          {{ final_detailed_sudo_version.stdout | default(initial_sudo_version) if final_detailed_sudo_version is defined else initial_sudo_version }}
        update_performed: >-
          {{ (sudo_update_debian is defined and sudo_update_debian.changed) or
             (sudo_update_redhat is defined and sudo_update_redhat.changed) }}

    - name: Check final vulnerability for CVE-2025-32462 (Debian/Ubuntu)
      command: dpkg --compare-versions "{{ final_sudo_version }}" lt "{{ fixed_version_32462 }}"
      register: final_32462_deb_check
      changed_when: false
      failed_when: false
      when: >
        ansible_os_family == "Debian" and
        not cve_32462_not_affected and
        final_sudo_version != 'unknown' and
        update_performed

    - name: Check final vulnerability for CVE-2025-32463 (Debian/Ubuntu)
      command: dpkg --compare-versions "{{ final_sudo_version }}" lt "{{ fixed_version_32463 }}"
      register: final_32463_deb_check
      changed_when: false
      failed_when: false
      when: >
        ansible_os_family == "Debian" and
        not cve_32463_not_affected and
        final_sudo_version != 'unknown' and
        update_performed

    - name: Check final vulnerability for CVE-2025-32462 (RedHat)
      command: rpmdev-vercmp "{{ final_sudo_version }}" "{{ fixed_version_32462 }}"
      register: final_32462_rpm_check
      changed_when: false
      failed_when: false
      when: >
        ansible_os_family == "RedHat" and
        not cve_32462_not_affected and
        final_sudo_version != 'unknown' and
        update_performed and
        rpmdev_available.rc == 0

    - name: Check final vulnerability for CVE-2025-32463 (RedHat)
      command: rpmdev-vercmp "{{ final_sudo_version }}" "{{ fixed_version_32463 }}"
      register: final_32463_rpm_check
      changed_when: false
      failed_when: false
      when: >
        ansible_os_family == "RedHat" and
        not cve_32463_not_affected and
        final_sudo_version != 'unknown' and
        update_performed and
        rpmdev_available.rc == 0

    - name: Determine final vulnerability status
      set_fact:
        final_vulnerable_32462: >-
          {{ false if cve_32462_not_affected else
             false if not initially_vulnerable_32462 else
             false if not update_performed else
             (final_32462_deb_check.rc == 0) if ansible_os_family == "Debian" and final_32462_deb_check is defined and 'rc' in final_32462_deb_check else
             (final_32462_rpm_check.rc == 11) if ansible_os_family == "RedHat" and final_32462_rpm_check is defined and 'rc' in final_32462_rpm_check else
             initially_vulnerable_32462 }}
        final_vulnerable_32463: >-
          {{ false if cve_32463_not_affected else
             false if not initially_vulnerable_32463 else
             false if not update_performed else
             (final_32463_deb_check.rc == 0) if ansible_os_family == "Debian" and final_32463_deb_check is defined and 'rc' in final_32463_deb_check else
             (final_32463_rpm_check.rc == 11) if ansible_os_family == "RedHat" and final_32463_rpm_check is defined and 'rc' in final_32463_rpm_check else
             initially_vulnerable_32463 }}

    - name: Set CVE status messages
      set_fact:
        cve_32462_status: >-
          {{ 'Not Affected' if cve_32462_not_affected else
             'Fixed' if initially_vulnerable_32462 and not final_vulnerable_32462 else
             'Already Patched' if not initially_vulnerable_32462 else
             'Still Vulnerable' if final_vulnerable_32462 else
             'Not Vulnerable' }}
        cve_32463_status: >-
          {{ 'Not Affected' if cve_32463_not_affected else
             'Fixed' if initially_vulnerable_32463 and not final_vulnerable_32463 else
             'Already Patched' if not initially_vulnerable_32463 else
             'Still Vulnerable' if final_vulnerable_32463 else
             'Not Vulnerable' }}
        action_taken: >-
          {{ 'Sudo updated successfully' if update_performed else
             'No update needed - already patched' if not initially_vulnerable_32462 and not initially_vulnerable_32463 else
             'No update performed - may need manual intervention' }}

    - name: Set report content for RHEL systems
      set_fact:
        report_lines:
          - "=========================================="
          - "Combined Registration & CVE Report for {{ inventory_hostname }}"
          - "=========================================="
          - "OS: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "RHEL Registration: {{ 'Success' if rhel_registration_success | default(false) else 'Failed/Unknown' }}"
          - ""
          - "Sudo Versions:"
          - "  Initial: {{ initial_sudo_version }}"
          - "  Final: {{ final_sudo_version }}"
          - ""
          - "CVE Status:"
          - "  CVE-2025-32462: {{ cve_32462_status }}"
          - "  CVE-2025-32463: {{ cve_32463_status }}"
          - ""
          - "Action Taken: {{ action_taken }}"
          - ""
          - "Required Fixed Versions:"
          - "  CVE-2025-32462: {{ fixed_version_32462 }}"
          - "  CVE-2025-32463: {{ fixed_version_32463 }}"
          - ""
          - "Initially Vulnerable:"
          - "  CVE-2025-32462: {{ initially_vulnerable_32462 }}"
          - "  CVE-2025-32463: {{ initially_vulnerable_32463 }}"            
          - "=========================================="
      when: ansible_distribution == "RedHat"

    - name: Set report content for non-RHEL systems
      set_fact:
        report_lines:
          - "=========================================="
          - "Sudo CVE Report for {{ inventory_hostname }}"
          - "=========================================="
          - "OS: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - ""
          - "Sudo Versions:"
          - "  Initial: {{ initial_sudo_version }}"
          - "  Final: {{ final_sudo_version }}"
          - ""
          - "CVE Status:"
          - "  CVE-2025-32462: {{ cve_32462_status }}"
          - "  CVE-2025-32463: {{ cve_32463_status }}"
          - ""
          - "Action Taken: {{ action_taken }}"
          - ""
          - "Required Fixed Versions:"
          - "  CVE-2025-32462: {{ fixed_version_32462 }}"
          - "  CVE-2025-32463: {{ fixed_version_32463 }}"
          - ""
          - "Initially Vulnerable:"
          - "  CVE-2025-32462: {{ initially_vulnerable_32462 }}"
          - "  CVE-2025-32463: {{ initially_vulnerable_32463 }}"            
          - "=========================================="
      when: ansible_distribution != "RedHat"

    - name: Print final report
      debug:
        msg: "{{ report_lines }}"

  handlers:
    - name: sudo_updated
      debug:
        msg: "Sudo package was updated on {{ inventory_hostname }}."
